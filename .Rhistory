(10*d+alpha)
}
f_a(c(a_d,b_d))
f_a = function(v){
d=abs(dchisq(v[1],df=1) - dchisq(v[2],df=1))
alpha = abs(pchisq(v[1],df=1) + pchisq(v[2],df=1,lower.tail = FALSE) -0.1)
(d+alpha)
}
f_a(c(a_d,b_d))
f_a = function(v){
d=abs(dchisq(v[1],df=1) - dchisq(v[2],df=1))
alpha = abs(pchisq(v[1],df=2) + pchisq(v[2],df=2,lower.tail = FALSE) -0.1)
(d+alpha)
}
pchisq(3.841459,df=1)
a_d = qchisq(0.05,df=1)
b_d = qchisq(0.95,df=1)
f_a(c(a_d,b_d))
print(d)
f_a = function(v){
d=abs(dchisq(v[1],df=1) - dchisq(v[2],df=1))
print(d)
alpha = abs(pchisq(v[1],df=2) + pchisq(v[2],df=2,lower.tail = FALSE) -0.1)
(d+alpha)
}
f_a(c(a_d,b_d))
f_a = function(v){
d=abs(dchisq(v[1],df=1) - dchisq(v[2],df=1))
alpha = abs(pchisq(v[1],df=2) + pchisq(v[2],df=2,lower.tail = FALSE) -0.1)
print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
a_d = qchisq(0.05,df=2)
b_d = qchisq(0.95,df=2)
f_a(c(a_d,b_d))
length(a_d,b_d)
optim(par = c(1,50),fn= f_a,method = "L-BFGS-B",lower = c(0,0))
a_d
b_d
init_a = c(qchisq(0.05,df=1),qchisq(0.95,df=1))
init_a
optim(par = init_a ,fn= f_a,method = "L-BFGS-B",lower = c(0,0))
optim(par = init_a ,fn= f_a,lower = c(0,0))
f_a(c(0.8027251,38.8898246))
f_a = function(v){
d=abs(dchisq(v[1],df=n+2) - dchisq(v[2],df=n+2))
alpha = abs(pchisq(v[1],df=n-1) + pchisq(v[2],df=n-1,lower.tail = FALSE) -0.1)
print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
f_a = function(v){
d=abs(dchisq(v[1],df=n+2) - dchisq(v[2],df=n+2))
alpha = abs(pchisq(v[1],df=n-1) + pchisq(v[2],df=n-1,lower.tail = FALSE) -0.1)
print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
a_d = qchisq(0.05,df=2)
b_d = qchisq(0.95,df=2)
f_a(c(a_d,b_d))
length = function(a,b){
1/a-1/b
}
length(a_d,b_d)
a_d = qchisq(0.05,df=n-1)
b_d = qchisq(0.95,df=n-1)
f_a(c(a_d,b_d))
length = function(a,b){
1/a-1/b
}
length(a_d,b_d)
init_a = c(qchisq(0.05,df=1),qchisq(0.95,df=1))
f_a = function(v){
d=abs(dchisq(v[1],df=n+2) - dchisq(v[2],df=n+2))
alpha = abs(pchisq(v[1],df=n-1) + pchisq(v[2],df=n-1,lower.tail = FALSE) -0.1)
#print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
library(ggplot2)
# Want to find bounds a,b subject to two equality constraints
#n = 3, alpha = 0.1
#a: df = n+2
#b: df = n+3
#c: df = n+1
#d: just use cdf
n=3
f_a = function(v){
d=abs(dchisq(v[1],df=n+2) - dchisq(v[2],df=n+2))
alpha = abs(pchisq(v[1],df=n-1) + pchisq(v[2],df=n-1,lower.tail = FALSE) -0.1)
#print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
f_b = f(n+3)
f_c = f(n+2)
a_d = qchisq(0.05,df=n-1)
b_d = qchisq(0.95,df=n-1)
f_a(c(a_d,b_d))
length = function(a,b){
1/a-1/b
}
length(a_d,b_d)
init_a = c(qchisq(0.05,df=1),qchisq(0.95,df=1))
optim(par = init_a ,fn= f_a,lower = c(0,0))
optim(par = init_a ,method = "L-BFGS-B",fn= f_a,lower = c(0,0))
f_a(c(0.206553,12.559562))
v = f_a(c(0.206553,12.559562))
abs(dchisq(v[1],df=n+2) - dchisq(v[2],df=n+2))
v = c(0.206553,12.559562)
abs(dchisq(v[1],df=n+2) - dchisq(v[2],df=n+2))
dchisq(v[1],df=n+2)
dchisq(v[2],df=n+2)
abs(dchisq(v[1],df=n+2) - dchisq(v[2],df=n+2))
length = function(ab){
1/ab[1]-1/ab[2]
}
optim(par = init_a ,method = "L-BFGS-B",fn= f_a,lower = c(0,0))
optim(par = init_a ,method = "L-BFGS-B",fn= f_a,lower = c(0,0))$par
opt_a
opt_a = optim(par = init_a ,method = "L-BFGS-B",fn= f_a,lower = c(0,0))$par
length(opt_a)
opt_d =c(qchisq(0.05,df=n-1), qchisq(0.95,df=n-1))
length(opt_d)
length(opt_a)
length(opt_d)
init_a = c(qchisq(0.05,df=n+2),qchisq(0.95,df=n+2))
f_a = function(v){
d=abs(dchisq(v[1],df=n+2) - dchisq(v[2],df=n+2))
alpha = abs(pchisq(v[1],df=n-1) + pchisq(v[2],df=n-1,lower.tail = FALSE) -0.1)
#print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
f_b = function(v){
d=abs(dchisq(v[1],df=n+3) - dchisq(v[2],df=n+3))
alpha = abs(pchisq(v[1],df=n-1) + pchisq(v[2],df=n-1,lower.tail = FALSE) -0.1)
#print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
f_c = function(v){
d=abs(dchisq(v[1],df=n+1) - dchisq(v[2],df=n+1))
alpha = abs(pchisq(v[1],df=n-1) + pchisq(v[2],df=n-1,lower.tail = FALSE) -0.1)
#print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
length = function(ab){
1/ab[1]-1/ab[2]
}
length = function(ab){
1/ab[1]-1/ab[2]
}
init_a = c(qchisq(0.05,df=n+2),qchisq(0.95,df=n+2))
opt_a = optim(par = init_a ,method = "L-BFGS-B",fn= f_a,lower = c(0,0))$par
length(opt_a)
init_b = c(qchisq(0.05,df=n+3),qchisq(0.95,df=n+3))
opt_b = optim(par = init_b ,method = "L-BFGS-B",fn= f_b,lower = c(0,0))$par
length(opt_b)
init_c = c(qchisq(0.05,df=n+1),qchisq(0.95,df=n+1))
opt_c = optim(par = init_c ,method = "L-BFGS-B",fn= f_c,lower = c(0,0))$par
length(opt_c)
opt_d =c(qchisq(0.05,df=n-1), qchisq(0.95,df=n-1))
length(opt_d)
opt_c
opt_b
opt_a
optim(par = init_b ,method = "L-BFGS-B",fn= f_b,lower = c(0,0))
optim(par = init_c ,method = "L-BFGS-B",fn= f_c,lower = c(0,0))
f_a = function(v){
d=(dchisq(v[1],df=n+2) - dchisq(v[2],df=n+2))**2
alpha = (pchisq(v[1],df=n-1) + pchisq(v[2],df=n-1,lower.tail = FALSE) -0.1)**2
#print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
f_b = function(v){
d=(dchisq(v[1],df=n+3) - dchisq(v[2],df=n+3))**2
alpha = (pchisq(v[1],df=n-1) + pchisq(v[2],df=n-1,lower.tail = FALSE) -0.1)**2
#print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
f_c = function(v){
d=(dchisq(v[1],df=n+1) - dchisq(v[2],df=n+1))**2
alpha = (pchisq(v[1],df=n-1) + pchisq(v[2],df=n-1,lower.tail = FALSE) -0.1)**2
#print(c("d"=d,"alpha"=alpha))
(d+alpha)
}
length = function(ab){
1/ab[1]-1/ab[2]
}
init_a = c(qchisq(0.05,df=n+2),qchisq(0.95,df=n+2))
opt_a = optim(par = init_a ,method = "L-BFGS-B",fn= f_a,lower = c(0,0))$par
length(opt_a)
opt_a = optim(par = init_a ,method = "L-BFGS-B",fn= f_a,lower = c(0,0))$par
optim(par = init_a ,method = "L-BFGS-B",fn= f_a,lower = c(0,0))
init_b = c(qchisq(0.05,df=n+3),qchisq(0.95,df=n+3))
opt_b = optim(par = init_b ,method = "L-BFGS-B",fn= f_b,lower = c(0,0))$par
length(opt_b)
optim(par = init_b ,method = "L-BFGS-B",fn= f_b,lower = c(0,0))
opt_d =c(qchisq(0.05,df=n-1), qchisq(0.95,df=n-1))
rbind(opt_a,opt_b,opt_c,opt_d)
length(all)
all = rbind(opt_a,opt_b,opt_c,opt_d)
length(all)
all = rbind(opt_a,opt_b,opt_c,opt_d)
rbind(opt_a,opt_b,opt_c,opt_d)
a = cbind(opt_a,length(opt_a))
a
length(opt_a)
a = rbind(opt_a,length(opt_a))
a
a = c(opt_a,length(opt_a))
a
b = c(opt_b,length(opt_b))
b
init_a = c(qchisq(0.05,df=n+2),qchisq(0.95,df=n+2))
opt_a = optim(par = init_a ,method = "L-BFGS-B",fn= f_a,lower = c(0,0))$par
a_ = c(opt_a,length(opt_a))
init_b = c(qchisq(0.05,df=n+3),qchisq(0.95,df=n+3))
opt_b = optim(par = init_b ,method = "L-BFGS-B",fn= f_b,lower = c(0,0))$par
length(opt_b)
b_ = c(opt_b,length(opt_b))
init_c = c(qchisq(0.05,df=n+1),qchisq(0.95,df=n+1))
opt_c = optim(par = init_c ,method = "L-BFGS-B",fn= f_c,lower = c(0,0))$par
length(opt_c)
c_ = c(opt_c,length(opt_c))
opt_d =c(qchisq(0.05,df=n-1), qchisq(0.95,df=n-1))
length(opt_d)
d_ = c(opt_d,length(opt_d))
rbind(a_,b_,c_,d_)
data(burn)
library(KMsurv)
library(survival)
library(ggplot2)
library(survMisc)
data(burn)
unadjusted = coxph(Surv(T3,D3)~Z1, data= burn)
adjusted = coxph(Surv(T3,D3)~ Z1 + Z4, data= burn)
summary(unadjusted)
summary(adjusted)
unadjusted = coxph(Surv(T3,D3)~Z1, data= burn)
summary(unadjusted)
unadjusted = coxph(Surv(T3,D3)~as.factor(Z1=1), data= burn)
unadjusted = coxph(Surv(T3,D3)~as.factor(Z1), data= burn)
summary(unadjusted)
adjusted = coxph(Surv(T3,D3)~ as.factor(Z1) + Z4, data= burn)
summary(adjusted)
unadjusted = coxph(Surv(T3,D3==1)~Z1==1, data= burn)
summary(unadjusted)
adjusted = coxph(Surv(T3,D3==1)~Z1==1 + Z4, data= burn)
summary(adjusted)
adjusted = coxph(Surv(T3,D3==1)~(Z1==1) + Z4, data= burn)
summary(adjusted)
library(stats)
AIC(unadjusted)
AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z4, data= burn))
burn
column(burn)
names(burn)
AIC_1 = c(coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn),
coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn),
coxph(Surv(T3,D3==1)~(Z1==1) + Z4, data= burn),
coxph(Surv(T3,D3==1)~(Z1==1) + Z_11, data= burn))
coxph(Surv(T3,D3==1)~(Z1==1) + Z_11, data= burn)
AIC_1 = c(coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn),
coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn),
coxph(Surv(T3,D3==1)~(Z1==1) + Z4, data= burn),
coxph(Surv(T3,D3==1)~(Z1==1) + Z11, data= burn))
AIC(AIC_1)
lapply(AIC,AIC_1)
lapply(AIC_1,AIC)
sapply(AIC_1,AIC)
AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn))
tapply(AIC_1,AIC)
apply(AIC_1,AIC)
AIC_1 = c(AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)),
AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn)),
AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z4, data= burn)),
AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z11, data= burn)))
AIC_1
AIC_1 = c(z2 = AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)),
z3 = AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn)),
z4 = AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z4, data= burn)),
z11 = AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z11, data= burn)))
AIC_1
coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn)
#Z_2, Z_3, Z_4, Z_{11}
(coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)
#Z_2, Z_3, Z_4, Z_{11}
x = coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)
x = coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)
x$coefficients
x$linear.predictors
x$wald.test
x$contrasts
x = coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)
p_value = c(z2 =(coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)),
z3 = AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn)),
z4 = AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z4, data= burn)),
z11 = AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z11, data= burn)))
p_value = c(z2 =(coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)),
z3 = (coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn)),
z4 = (coxph(Surv(T3,D3==1)~(Z1==1) + Z4, data= burn)),
z11 = (coxph(Surv(T3,D3==1)~(Z1==1) + Z11, data= burn)))
p_value
coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn)
#Z_2, Z_4, Z_{11}
AIC_2 = c(z2 = AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z3+ Z2, data= burn)),
z4 = AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z3+Z4, data= burn)),
z11 = AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z3+Z11, data= burn)))
AIC_2
AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z3+ Z2, data= burn))
coxph(Surv(T3,D3==1)~(Z1==1) + Z3+ Z2, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z2, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z4, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z11, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z3+ Z2, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z3+Z4, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z3+Z11, data= burn)
AIC(coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn)
coxph(Surv(T3,D3==1)~(Z1==1) + Z3, data= burn)
data("tongue")
tongue_fit = survfit(Surv(time = time,  event = delta)~as.factor(type), data = tongue)
tongue_fit = coxph(Surv(time = time,  event = delta)~as.factor(type), ties = "Breslow", data = tongue)
tongue_fit = coxph(Surv(time = time,  event = delta)~as.factor(type), ties = "breslow", data = tongue)
summary(tongue_fit)
tongue_fit = coxph(Surv(time = time,  event = delta)~as.factor(type), ties = "breslow", data = tongue)
summary(tongue_fit)
log(c(0.915,2.748))
summary(tongue_fit)
Chemotherapy_censored = cbind(c(2754, 2950),0)
Chemotherapy_censored
Chemotherapy_times
Chemotherapy_times = cbind(c(1, 63, 105, 129, 182, 216, 250, 262, 301, 301, 342, 354,356, 358, 380, 383, 383, 388, 394, 408, 460, 489, 499, 523, 524, 535, 562, 569, 675, 676, 748, 778, 786, 797, 955, 968, 1000, 1245, 1271, 1420, 1551, 1694, 2363),1)
Radiotherapy_censored = cbind(c(2412, 2486, 2796, 2802, 2934, 2988),0)
Radiotherapy_times = cbind(c(17, 42, 44, 48, 60, 72, 74, 95, 103, 108, 122, 144, 167, 170, 183, 185, 193, 195, 197, 208, 234, 235, 254, 307, 315, 401, 445, 464, 484, 528, 542, 547, 577, 580, 795, 855,1366, 1577, 2060),1)
Chemotherapy_times = cbind(c(1, 63, 105, 129, 182, 216, 250, 262, 301, 301, 342, 354,356, 358, 380, 383, 383, 388, 394, 408, 460, 489, 499, 523, 524, 535, 562, 569, 675, 676, 748, 778, 786, 797, 955, 968, 1000, 1245, 1271, 1420, 1551, 1694, 2363),1)
Chemotherapy_censored = cbind(c(2754, 2950),0)
Radiotherapy_times = cbind(c(17, 42, 44, 48, 60, 72, 74, 95, 103, 108, 122, 144, 167, 170, 183, 185, 193, 195, 197, 208, 234, 235, 254, 307, 315, 401, 445, 464, 484, 528, 542, 547, 577, 580, 795, 855,1366, 1577, 2060),1)
Radiotherapy_censored = cbind(c(2412, 2486, 2796, 2802, 2934, 2988),0)
Chemotherapy_times = cbind(0,c(1, 63, 105, 129, 182, 216, 250, 262, 301, 301, 342, 354,356, 358, 380, 383, 383, 388, 394, 408, 460, 489, 499, 523, 524, 535, 562, 569, 675, 676, 748, 778, 786, 797, 955, 968, 1000, 1245, 1271, 1420, 1551, 1694, 2363),1)
Chemotherapy_censored = cbind(0,c(2754, 2950),0)
Radiotherapy_times = cbind(1,c(17, 42, 44, 48, 60, 72, 74, 95, 103, 108, 122, 144, 167, 170, 183, 185, 193, 195, 197, 208, 234, 235, 254, 307, 315, 401, 445, 464, 484, 528, 542, 547, 577, 580, 795, 855,1366, 1577, 2060),1)
Radiotherapy_censored = cbind(1,c(2412, 2486, 2796, 2802, 2934, 2988),0)
rbind(Chemotherapy_times,Chemotherapy_censored,Radiotherapy_times,Radiotherapy_censored)
df = data.frame(rbind(Chemotherapy_times,Chemotherapy_censored,Radiotherapy_times,Radiotherapy_censored), names = c("Treat","Time","Event"))
df
df = data.frame(rbind(Chemotherapy_times,Chemotherapy_censored,Radiotherapy_times,Radiotherapy_censored))
df$name = c("Treat","Time","Event")
df
names(df) = c("Treat","Time","Event")
df
df = data.frame(rbind(Chemotherapy_times,Chemotherapy_censored,Radiotherapy_times,Radiotherapy_censored))
names(df) = c("Treat","Time","Event")
df
coxph(Surv(time = Time, event =Event) ~ Treat, data = df)
coxph(Surv(time = Time, event =Event) ~ Treat==1, data = df)
model = coxph(Surv(time = Time, event =Event) ~ Treat==1, data = df)
summary(model)
log(c(0.7182  , 1.724))
model_t = coxph(Surv(time = Time, event =Event) ~ (Treat==1)  + (Treat==1)*log(Time), data = df)
df$log_time = Treat*log(df$Time)
df$log_time = df$Treat*log(df$Time)
model_t = coxph(Surv(time = Time, event =Event) ~ (Treat==1)  + log_time, data = df)
summary(model)
summary(model_t)
model_laryn = coxph(Surv(time = Time, event = Death)~ Stage, data = laryngeal)
laryngeal = read.csv("laryngeal.txt",sep="",header=TRUE)
laryngeal
model_laryn = coxph(Surv(time = Time, event = Death_indicator)~ Stage, data = laryngeal)
summary(model_laryn)
laryngeal$Stage = as.factor(laryngeal$Stage)
model_laryn = coxph(Surv(time = Time, event = Death_indicator)~ Stage, data = laryngeal)
summary(model_laryn)
laryngeal
laryngeal$Strata = as.factor(laryngeal$Year < 75)
model_laryn = coxph(Surv(time = Time, event = Death_indicator)~ Stage + age, data = laryngeal)
model_laryn = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = laryngeal)
summary(model_laryn)
model_laryn_s = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age + strata(Strata), data = laryngeal)
summary(model_laryn_s)
laryngeal$Strata = as.factor(laryngeal$Year <= 75)
model_laryn_s = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age + strata(Strata), data = laryngeal)
summary(model_laryn_s)
laryngeal$Strata = as.factor(laryngeal$Year < 75)
model_laryn_s = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age + strata(Strata), data = laryngeal)
summary(model_laryn_s)
summary(model_laryn)
summary(model_laryn_s)
2*(18.31 - 17.96)
pchisq(q=0.7,df=4,lower.tail = FALSE)
(18.31 - 17.96)
pchisq(q=0.35,df=4,lower.tail = FALSE)
model_laryn_s = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age + strata(Strata), data = laryngeal)
summary(model_laryn_s)
cox.zph(model, transform="log")
fitStrat = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age + strata(Strata), data = laryngeal)
fitS0 = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = subset(laryngeal,laryngeal$Strata==0))
laryngeal$Strata = as.factor(laryngeal$Year < 75)
model_laryn = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = laryngeal)
summary(model_laryn)
fitStrat = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age + strata(Strata), data = laryngeal)
fitS0 = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = subset(laryngeal,laryngeal$Strata==0))
laryngeal$Strata = as.factor(laryngeal$Year <= 75)
model_laryn = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = laryngeal)
summary(model_laryn)
fitStrat = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age + strata(Strata), data = laryngeal)
fitS0 = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = subset(laryngeal,laryngeal$Strata==0))
laryngeal$Strata = as.factor(laryngeal$Year < 75)
model_laryn = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = laryngeal)
summary(model_laryn)
fitStrat = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age + strata(Strata), data = laryngeal)
subset(laryngeal,laryngeal$Strata==0)
s0  =subset(laryngeal,laryngeal$Strata==0)
s0
laryngeal$Strata
fitS0 = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = subset(laryngeal,~laryngeal$Strata))
fitS0 = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = subset(laryngeal,!laryngeal$Strata))
fitS0 = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = subset(laryngeal,!(laryngeal$Strata)))
subset(laryngeal,!(laryngeal$Strata))
fitS0 = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = subset(laryngeal,laryngeal$Strata==FALSE))
fitS1 = coxph(Surv(time = Time, event = Death_indicator)~ Stage + Age, data = subset(laryngeal,laryngeal$Strata == TRUE))
llStrat=fitStrat$loglik[2]
llS0=fitS1$loglik[2]
llS1=fitS0$loglik[2]
llStrat
llS0
llS1
-2[llStrat - [llS1 +llS0]]
-2(llStrat - (llS1 +llS0))
-2*(llStrat - (llS1 +llS0))
1-pchisq(3.127223,df = 4)
-2*(llStrat - (llS1 +llS0))
1-pchisq(3.127223,df = 4)
-2*(llStrat - (llS1 +llS0))
1-pchisq(l_stat,df = 4)
l_stat = -2*(llStrat - (llS1 +llS0))
1-pchisq(l_stat,df = 4)
l_stat
llStrat
fitStrat
rm(list = ls())
set.seed(8123)
library(caret)
library(corpcor)
library(rdetools)
library(expm)
library(boot)
#library(SuperLearner)
#library(gam)
#library(polspline)
library(ranger)
library(glmnet)
#library(SIS)
#library(tmle)
#library(twang)
library(gbm)
source('data_prep.R') #X has all 11 variables
setwd("C:\Users\minhp\Documents\GitHub\Forster_Warmuth_counterfactual_regression\real")
setwd("C:\\Users\\minhp\\Documents\\GitHub\\Forster_Warmuth_counterfactual_regression\\real")
source('data_prep.R') #X has all 11 variables
install.packages("rdetools")
source('data_prep.R') #X has all 11 variables
s <- sort(rep(1:4,n/4));
rm(list = ls())
library(MASS)
library(splines)
library(latex2exp)
source('toSource.R')
D = 4
expit <- function(x){ exp(x)/(1+exp(x)) };
logit <- function(x){ log(x/(1-x)) }
n <- 4*2000; nsim <- 500;
rateseq <- seq(0.1,0.5,by=0.05);
cate_hat <- res2 <- NULL
set.seed(1)
cate_hat_mat <- data.frame(matrix(nrow=nsim,ncol=14))
cate_hat_mat
colnames(cate_hat_mat) <- c("plugin","xl","drl","drl_poly","oracle.drl","bs","ns","poly","forster_poly","forster_ns", "ls_poly","ls_ns", "forster_bs", "ls_bs")
cate_hat_mat
colnames(cate_hat_mat) <- c("plugin","xl","drl","drl_poly","oracle.drl","bs","ns","poly","forster_poly","forster_ns", "ls_poly","ls_ns", "forster_bs", "ls_bs")
res <- data.frame(matrix(nrow=nsim,ncol=14))
colnames(res) <- c("plugin","xl","drl","drl_poly","oracle.drl","bs","ns","poly","forster_poly","forster_ns", "ls_poly","ls_ns", "forster_bs", "ls_bs")
s <- sort(rep(1:4,n/4));
s
x <- (runif(n,-1,1));
ps <- 0.1 + 0.8*(x>0)
mu0 <- (x <= -.5)*0.5*(x+2)^2 + (x/2+0.875)*(x>-1/2 & x<0) +
(x>0 & x<.5)*(-5*(x-0.2)^2 +1.075) + (x>.5)*(x+0.125);
mu1 <- mu0;
tau <- 0
a <- rbinom(n,1,ps);
y <- a*mu1 + (1-a)*mu0 + rnorm(n,sd=(.2-.1*cos(2*pi*x)))
pi
x
.2-.1*cos(2*pi*x)
mu0 <- (x <= -.5)*0.5*(x+2)^2 + (x/2+0.875)*(x>-1/2 & x<0) +
(x>0 & x<.5)*(-5*(x-0.2)^2 +1.075) + (x>.5)*(x+0.125);
mu1 <- mu0;
tau <- 0
a <- rbinom(n,1,ps);
y <- a*mu1 + (1-a)*mu0 + rnorm(n,sd=(.2-.1*cos(2*pi*x)))
pihat <- expit( logit(ps) + rnorm(n,mean=1/(n/4)^rate,sd=1/(n/4)^rate))
rm(list = ls())
library(MASS)
library(splines)
library(latex2exp)
source('toSource.R')
source('toSource.R')
setwd("..")
source('toSource.R')
setwd("C:/Users/minhp/Documents/GitHub/Forster_Warmuth_counterfactual_regression")
source('toSource.R')
